{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/animal/animal.component.ts","./src/app/animal/animal.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/database.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {DatabaseService} from '../database.service'\n\n@Component({\n  selector: 'app-animal',\n  templateUrl: './animal.component.html',\n  styleUrls: ['./animal.component.css']\n})\nexport class AnimalComponent implements OnInit {\n  animalDB = [];\n  section = 1;\n  name = '';\n  species='';\n  eatingGroup = '';\n  animalId = '';\n  legCount = 0;\n  lifeSpan=0;\n  \n  constructor(private dbService: DatabaseService) { }\n\n  // Get all Animals\n  onGetAnimals() {\n    this.dbService.getAnimals().subscribe((data: any[]) => {\n      this.animalDB = data;\n    });\n  }\n  // Create a new Animal, POST request\n  onSaveAnimal() {\n    const obj = {species:this.species, name: this.name,legCount:this.legCount, lifeSpan:this.lifeSpan, eatingGroup: this.eatingGroup};\n    this.dbService.createAnimal(obj).subscribe(result => {\n      this.changeSection(1);\n      this.onGetAnimals();\n    });\n  }\n  \n\n  onAddAnimal() {\n    const obj = {species: this.species, name: this.name,legCount:this.legCount,lifeSpan:this.lifeSpan, eatingGroup: this.eatingGroup};\n    this.dbService.addAnimal(obj).subscribe(result => {\n      this.changeSection(1);\n      this.onGetAnimals();\n    });\n  }\n  \n //Update Animal\n onUpdateAnimal() {\n  const obj = {species:this.species, name: this.name,legCount:this.legCount, lifeSpan:this.lifeSpan, eatingGroup: this.eatingGroup};\n  this.dbService.updateAnimal(this.animalId, obj).subscribe(result => {\n    this.onGetAnimals();\n  });\n}\n\n//On filter Animals\nonFilterAnimals() {\n  this.dbService.filterAnimal().subscribe((data: any[]) => {\n    this.animalDB = data;\n  });\n}\n  \n// Delete Animal\nonDeleteAnimal(item) {\n  this.dbService.deleteAnimal(item._id).subscribe(result => {\n    this.onGetAnimals();\n  });\n}\n \n  // This lifecycle callback function will be invoked with the component get initialized by Angular.\n  ngOnInit() {\n    this.onGetAnimals();\n    }\n \n    changeSection(sectionId) {\n      this.section = sectionId;\n      this.resetValues();\n    }\n    \n    resetValues() {\n      this.species='';\n      this.name = '';\n      this.legCount = 0;\n      this.lifeSpan = 0;\n      this.eatingGroup = '';\n      this.animalId = '';\n    }\n  \n}\n","\n<div class=\" text-center\"> <h1><img src=\"assets/img/b.jpg\" width=\"900\" height=\"250\"></h1></div>\n \n\n<!-- The navigation bar -->\n<nav class=\"navbar navbar-expand-sm bg-light justify-content-center\">\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\" style=\"padding-left:0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(1)\">Home</a>\n    </li>\n    <li class=\"nav-item\" style=\"padding-left:0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(2)\">Add Animal</a>\n    </li>\n    <li class=\"nav-item\" style=\"padding-left:0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(3)\">Update Animal</a>\n    </li>\n    <li class=\"nav-item\" style=\"padding-left:0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(4)\">Delete Animal</a>\n    </li>\n    <li class=\"nav-item\" style=\"padding-left:0.2in\">\n      <a class=\"btn btn-primary\" (click)=\"changeSection(5)\">Animal By Eating Group</a>\n    </li>\n  </ul>\n</nav>\n\n\n\n  <!-- First section: Display all in a tble -->\n<div class=\"section\" *ngIf=\"section==1\">\n  <table class=\"table table-striped\">\n    <tr>\n      <th>Species</th>\n      <th>Name</th>\n      <th>Number of Legs</th>\n      <th>Lifespan</th>\n      <th>Eating Group</th>\n    </tr>\n    <tr *ngFor=\"let item of animalDB\">\n      <td>{{item.species}}</td>\n      <td>{{item.name}}</td>\n      <td>{{item.legCount}}</td>\n      <td>{{item.lifeSpan}}</td>\n      <td>{{item.eatingGroup}}</td>\n    </tr>\n  </table>\n</div>\n\n\n<!-- Second Section: Add new animal -->\n<div class=\"section\" *ngIf=\"section==2\">\n  <div class=\"form-group\">\n    <label for=\"animalSpecieAdd\">Species</label>\n    <input type=\"text\" class=\"form-control\" id=\"animalSpecieAdd\" [(ngModel)]=\"species\" required>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"animalNameAdd\">Name</label>\n    <input type=\"text\" class=\"form-control\" id=\"animalNameAdd\" [(ngModel)]=\"name\" required>\n  </div>\n  <div class=\"form-group\">\n      <label for=\"animalLegCount\">Number of Legs</label>\n      <input type=\"number\" class=\"form-control\" id=\"animalLegCount\"  [(ngModel)]=\"legCount\" required>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"animalLifeSpanAdd\">Lifespan</label>\n      <input type=\"number\" class=\"form-control\" id=\"animalLifeSpanAdd\"[(ngModel)]=\"lifeSpan\" required>\n    </div>\n    <div >\n      Eating Group <select name=\"eatingGroup\"[(ngModel)]=\"eatingGroup\" class= form-control>\n      <option value=\"carnivore\">carnivore</option>\n      <option value=\"herbivore\">herbivore</option>\n      <option value=\"omnivore\">omnivore</option>\n      </select>\n    </div>\n  <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSaveAnimal()\">Save Animal</button>\n</div>\n<!-- Section 3: Update animal -->\n<div class=\"section\" *ngIf=\"section==3\">\n  <table class=\"table table-striped\">\n    <tr>\n      <th>Species</th>\n      <th>Name</th>\n      <th>Number of Legs</th>\n      <th>Lifespan</th>\n      <th>Eating Group</th>\n      <th>Select!</th>\n    </tr>\n    <tr *ngFor=\"let item of animalDB\">\n      <td>{{item.species}}</td>\n      <td>{{item.name}}</td>\n      <td>{{item.legCount}}</td>\n      <td>{{item.lifeSpan}}</td>\n      <td>{{item.eatingGroup}}</td>\n      <td>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSelectUpdate(item)\">Update</button>\n      </td>\n    </tr>\n  </table>\n  <hr>\n  <div *ngIf=\"animalDB.length>0\">\n      <div class=\"form-group\">\n          <label for=\"animalSpecieAdd\">Species</label>\n          <input type=\"text\" class=\"form-control\" id=\"animalSpecieAdd\" [(ngModel)]=\"species\" required>\n        </div>\n    <div class=\"form-group\">\n      <label for=\"animalNameUpdate\">Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"animalNameUpdate\" [(ngModel)]=\"name\" required>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"animalUpdate\">Leg Count</label>\n      <input type=\"number\" class=\"form-control\" id=\"animalUpdate\" [(ngModel)]=\"legCount\" required>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"animalLifeSpanAdd\">Lifespan</label>\n      <input type=\"number\" class=\"form-control\" id=\"animalLifeSpanAdd\"[(ngModel)]=\"lifeSpan\" required>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"animalEatingAdd\">Eating Group</label>\n      <input type=\"text\" class=\"form-control\" id=\"animalEatingAdd\"  [(ngModel)]=\"eatingGroup\" required>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onUpdateanimal()\">Update Animal</button>\n  </div>\n</div>\n<!-- Section 4: Delete Animal -->\n<div class=\"section\" *ngIf=\"section==4\">\n  <table class=\"table table-striped\">\n    <tr>\n      <th>Species</th>\n      <th>Name</th>\n      <th>Number of Legs</th>\n      <th>Lifespan</th>\n      <th>Eating Group</th>\n      <th>Delete?</th>\n    </tr>\n    <tr *ngFor=\"let item of animalDB\">\n      <td>{{item.species}}</td>\n      <td>{{item.name}}</td>\n      <td>{{item.legCount}}</td>\n      <td>{{item.lifeSpan}}</td>\n      <td>{{item.eatingGroup}}</td>\n      <td>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onDeleteAnimal(item)\">Delete</button>\n      </td>\n    </tr>\n  </table>\n</div>\n\n<!-- Section 5: Filter Animal -->\n\n<div class=\"section\" *ngIf=\"section==5\">\n  <table class=\"table table-striped\">\n    <tr>\n      <th>Species</th>\n      <th>Name</th>\n      <th>Number of Legs</th>\n      <th>Lifespan</th>\n      <th>Eating Group</th>\n    </tr>\n    <tr *ngFor=\"let item of animalDB\">\n      <td>{{item.species}}</td>\n      <td>{{item.name}}</td>\n      <td>{{item.legCount}}</td>\n      <td>{{item.lifeSpan}}</td>\n      <td>{{item.eatingGroup}}</td>\n    </tr>\n  </table>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'animalAng';\n}\n","<app-animal></app-animal>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { AnimalComponent } from './animal/animal.component';\nimport { DatabaseService } from './database.service';\nimport {HttpClientModule} from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AnimalComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [DatabaseService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'}),\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DatabaseService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  result: any;\n\n  getAnimals() {\n    const url = '/animal'\n    return this.http.get(url);\n  }\n\n  getAnimal(id: string) {\n    const url = '/' + id;\n    return this.http.get(url);\n  }\n  \n  filterAnimal(){\n   return this.http.get('/filter');\n }\n  createAnimal(data) {\n    return this.http.post('/add', data, httpOptions);\n  }\n\n  updateAnimal(id, data) {\n    const url = '/update/' + id;\n    return this.http.put(url, data, httpOptions);\n  }\n\n  deleteAnimal(id) {\n    const url = '/' + id;\n    return this.http.delete(url, httpOptions);\n  }\n\n  addAnimal(data) {\n    return this.http.put('/' + data.name, httpOptions);\n  }\n\n  \n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}